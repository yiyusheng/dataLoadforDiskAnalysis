source('~/Code/R/tencProcess/failRecordParse.R')
createtimeCut <- melt(table(cut.POSIXt(failRecordA$f_time,breaks = 'month')))
names(createtimeCut) <- c('month','number')
ggplot(createtimeCut,aes(x = month,y = number)) + geom_bar(stat = 'identity')
# Plot for sc16
rm(list = ls())
#@@@ CONFIGURE @@@#
source('head.R')
require(ggplot2)
#@@@ Function @@@#
source(file.path(dir_code,'attr_function.R'))
source(file.path(dir_code,'sc16F1Func.R'))
#####################################################################################################
# S1. plot correlation between disk age and AFR
Qu <- 1 # cut by each quauters
flistFile <- 'dataPrepareAFR13.Rda'
# flistFile <- 'dataPrepareAFR1406_1407.Rda'
load(file.path(dir_data,flistFile))
tmp.f$fsTimeQu <- cut3mon(tmp.f$failShiptime)
tmp.cmdb$shTimeQu <- cut3mon(tmp.cmdb$shiptimeToRight)
tmp.f$shTimeQu <- tmp.cmdb$shTimeQu[match(tmp.f$svr_id,tmp.cmdb$svr_asset_id)]
tmp.cmdb$shTimeQu <- tmp.cmdb$shTimeQu[match(tmp.cmdb$svr_asset_id,tmp.cmdb$svr_asset_id)]
rm(list = ls())
#@@@ CONFIGURE @@@#
source('head.R')
require(ggplot2)
#@@@ Function @@@#
source(file.path(dir_code,'attr_function.R'))
dirname(sys.frame((1)$ofile))
dirname(sys.frame(1)$ofile)
source('~/Code/R/attrid/head.R')
rm(list = ls())
#@@@ CONFIGURE @@@#
source('head.R')
rm(list = ls())
#@@@ CONFIGURE @@@#
source('head.R')
source('~/Code/R/attrid/head.R')
rm(list = ls())
#@@@ CONFIGURE @@@#
source('head.R')
require(ggplot2)
rm(list = ls())
#@@@ CONFIGURE @@@#
source('head.R')
require(ggplot2)
#@@@ Function @@@#
source(file.path(dir_code,'attr_function.R'))
source(file.path(dir_code,'sc16F1Func.R'))
#####################################################################################################
# S1. plot correlation between disk age and AFR
Qu <- 1 # cut by each quauters
flistFile <- 'dataPrepareAFR13.Rda'
# flistFile <- 'dataPrepareAFR1406_1407.Rda'
load(file.path(dir_data,flistFile))
tmp.f$fsTimeQu <- cut3mon(tmp.f$failShiptime)
tmp.cmdb$shTimeQu <- cut3mon(tmp.cmdb$shiptimeToRight)
tmp.f$shTimeQu <- tmp.cmdb$shTimeQu[match(tmp.f$svr_id,tmp.cmdb$svr_asset_id)]
tmp.cmdb$shTimeQu <- tmp.cmdb$shTimeQu[match(tmp.cmdb$svr_asset_id,tmp.cmdb$svr_asset_id)]
# Plot for sc16
rm(list = ls())
#@@@ CONFIGURE @@@#
source('head.R')
load(file.path(dir_dataSource,'load_ftr_attrid.Rda'))
useOld <- 1
if (useOld == 1){
lowerTime <- as.POSIXct('2013-01-01')
upperTime <- as.POSIXct('2013-10-01')
saveName <- 'dataPrepareAFR13.Rda'
}else{
lowerTime <- as.POSIXct('2014-06-01')
upperTime <- as.POSIXct('2014-08-01')
saveName <- 'dataPrepareAFR1406_1407.Rda'
}
# S1. Failure record prepare
# a wrong failure record makes original result wrong
# data.f <- subset(data.fMore,(f_time > as.POSIXct('2013-02-02') & f_time < as.POSIXct('2013-12-01')) |
#                    f_time > as.POSIXct('2014-01-01'))
data.f <- subset(data.fMore, f_time < upperTime & f_time > lowerTime)
data.f <- subset(data.f,ip %in% cmdb$ip)
data.f$use_time <- cmdb$use_time[match(data.f$svr_id,cmdb$svr_asset_id)]
data.f$failShiptime <- floor(data.f$f_time - data.f$use_time)
units(data.f$failShiptime) <- 'days'
data.f$failShiptime <- as.numeric(data.f$failShiptime)/365
data.f$fsTime <- floor(data.f$failShiptime)
data.f$fsTimeN <- cut(data.f$failShiptime,c(0,1/2,1:7),include.lowest = T)
data.f$fsTimeN <- gsub('^\\[|^\\(|,.*$','',data.f$fsTimeN)
# S2. Compute online time
cmdb$shiptimeToLeft <- floor(lowerTime - cmdb$use_time)
cmdb$shiptimeToRight <- floor(upperTime - cmdb$use_time)
units(cmdb$shiptimeToLeft) <- 'days'
units(cmdb$shiptimeToRight) <- 'days'
cmdb$shiptimeToLeft <- as.numeric(cmdb$shiptimeToLeft)/365
cmdb$shiptimeToRight <- as.numeric(cmdb$shiptimeToRight)/365
# a wrong setting
# cmdb$shTime <- floor(cmdb$shiptimeToLeft + (1/12))
cmdb$shTime <- floor(cmdb$shiptimeToRight)
cmdb$shTimeN <- cut(cmdb$shiptimeToRight,c(0,1/2,1:7),include.lowest = T)
cmdb$shTimeN <- gsub('^\\[|^\\(|,.*$','',cmdb$shTimeN)
# S3. Label for each server
cmdb$dClass <- ''
class_C <- 'C1'
class_B <- c('B5','B6','B1')
class_TS <- c('TS1','TS3','TS4','TS5','TS6')
cmdb$dClass[cmdb$dev_class_id %in% class_C] <- 'C'
cmdb$dClass[cmdb$dev_class_id %in% class_B] <- 'B'
cmdb$dClass[cmdb$dev_class_id %in% class_TS] <- 'TS'
cmdb$diskNum <- disk_ip$disk_c[match(cmdb$ip,disk_ip$ip)]
summary(cmdb$diskNum)
# Containing 13 failed server
cmdbio <- subset(cmdb,svr_asset_id %in% mean_io$svrid &
dev_class_id %in% c(class_C,class_TS) &
shiptimeToRight > 0)
cmdbio <- subset(cmdb,svr_asset_id %in% mean_io$svrid &
dev_class_id %in% c(class_C,class_TS) &
shiptimeToRight > 0 & !is.na(diskNum))
source('~/Code/R/attrid/dataPrepareAFR.R')
# Plot for sc16
rm(list = ls())
#@@@ CONFIGURE @@@#
source('head.R')
require(ggplot2)
#@@@ Function @@@#
source(file.path(dir_code,'attr_function.R'))
source(file.path(dir_code,'sc16F1Func.R'))
#####################################################################################################
# S1. plot correlation between disk age and AFR
Qu <- 1 # cut by each quauters
flistFile <- 'dataPrepareAFR13.Rda'
# flistFile <- 'dataPrepareAFR1406_1407.Rda'
load(file.path(dir_data,flistFile))
tmp.f$fsTimeQu <- cut3mon(tmp.f$failShiptime)
tmp.cmdb$shTimeQu <- cut3mon(tmp.cmdb$shiptimeToRight)
tmp.f$shTimeQu <- tmp.cmdb$shTimeQu[match(tmp.f$svr_id,tmp.cmdb$svr_asset_id)]
tmp.cmdb$shTimeQu <- tmp.cmdb$shTimeQu[match(tmp.cmdb$svr_asset_id,tmp.cmdb$svr_asset_id)]
load(file.path(dir_data,flistFile))
tmp.f$fsTimeQu <- cut3mon(tmp.f$failShiptime)
tmp.cmdb$shTimeQu <- cut3mon(tmp.cmdb$shiptimeToRight)
tmp.f$shTimeQu <- tmp.cmdb$shTimeQu[match(tmp.f$svr_id,tmp.cmdb$svr_asset_id)]
# tmp.cmdb$shTimeQu <- tmp.cmdb$shTimeQu[match(tmp.cmdb$svr_asset_id,tmp.cmdb$svr_asset_id)]
tmp.f$diskNum <- tmp.cmdb$diskNum[match(tmp.f$svr_asset_id,tmp.cmdb$svr_id)]
tmp.f$diskNum <- tmp.cmdb$diskNum[match(tmp.f$svr_id,tmp.cmdb$svr_asset_id)]
View(`[<-.result`)
tmp.cmdb <- facotorX(tmp.cmdb)
tmp.cmdb <- factorX(tmp.cmdb)
df <- tmp.f
dc <- tmp.cmdb
colC <- c('svr_asset_id','dev_class_id','ip','raid',
'shiptimeToLeft','shiptimeToRight','dClass','shTimeQu')
virtD <- sapply(1:100,function(i){
r <- rep(tmp.cmdb[i,],tmp.cmdb$diskNum[i])
r$diskID <- 1:nrow(r)
r
})
virtD <- sapply(1:100,function(i){
r <- rep(tmp.cmdb[i,],tmp.cmdb$diskNum[i])
r$diskID <- 1:length(r)
r
})
virtD <- sapply(1:100,function(i){
r <- rep(tmp.cmdb[i,],tmp.cmdb$diskNum[i])
r$diskID <- 1:length(r)
r
})
# Plot for sc16
rm(list = ls())
#@@@ CONFIGURE @@@#
source('head.R')
require(ggplot2)
#@@@ Function @@@#
source(file.path(dir_code,'attr_function.R'))
source(file.path(dir_code,'sc16F1Func.R'))
#####################################################################################################
# S1. plot correlation between disk age and AFR
Qu <- 1 # cut by each quauters
flistFile <- 'dataPrepareAFR13.Rda'
# flistFile <- 'dataPrepareAFR1406_1407.Rda'
load(file.path(dir_data,flistFile))
tmp.f <- factorX(tmp.f)
tmp.cmdb <- factorX(tmp.cmdb)
tmp.f$fsTimeQu <- cut3mon(tmp.f$failShiptime)
tmp.cmdb$shTimeQu <- cut3mon(tmp.cmdb$shiptimeToRight)
tmp.f$shTimeQu <- tmp.cmdb$shTimeQu[match(tmp.f$svr_id,tmp.cmdb$svr_asset_id)]
tmp.f$diskNum <- tmp.cmdb$diskNum[match(tmp.f$svr_id,tmp.cmdb$svr_asset_id)]
df <- tmp.f;dc <- tmp.cmdb
colC <- c('svr_asset_id','dev_class_id','ip','raid','use_time','dClass',
'shiptimeToLeft','shiptimeToRight','shTimeQu')
idx.rep <- rep(seq_len(nrow(dc)),dc$diskNum)
diskidx <- unlist(tapply(idx.rep,idx.rep,function(x)seq_len(length(x))))
virtDC <- dc[idx.rep, colC]
virtDC$diskidx <- diskidx
virtDC$status <- 'working'
virtDC$f_time <- as.POSIXct('2014-01-01',tz = 'UTC')
virtDC <- virtDC[order(virtDC$svr_asset_id),]
virtDC$id <- seq_len(nrow(virtDC))
virtDCF <- factorX(subset(virtDC,svr_asset_id %in% df$svr_id))
virtDCN <- factorX(subset(virtDC,!(svr_asset_id %in% df$svr_id)))
df <- df[order(df$svr_id),]
df$id <- seq_len(nrow(df))
splitF <- split(seq_len(df),levels(df$svr_id))
splitF <- split(seq_len(nrow(df)),levels(df$svr_id))
head(splitF)
splitF[[1]]
splitF[[2]]
head(splitF,100)
a <- subset(df, svr_id == 'TYSV08070700')
View(a)
seq_len(nrow(df))
splitF <- split(df,df$svr_id)
a <- splitF[[1]]
a <- splitF[[2]]
a <- splitF[[3]]
a <- splitF[[2]]
View(a)
splitF <- split(df,df$svr_id)
splitF <- split(seq_len(nrow(df)),df$svr_id)
splitC <- split(seq_len(nrow(virtDCN)),virtDCN$svr_asset_id)
splitC <- split(seq_len(nrow(virtDCF)),virtDCF$svr_asset_id)
a <- names(splitF)
b <- names(splitC)
all.equal(a,b)
i==2
i=2
c <- splitC[[i]]
f <- splitF[[i]]
c <- df[splitC[[i]],]
f <- virtDCN[splitF[[i]],]
View(c)
View(f)
f <- virtDCF[splitF[[i]],]
View(f)
View(c)
f <- df[splitF[[i]],]
C <- virtDCF[splitC[[i]],]
View(f)
View(c)
names(splitF)[i]
splitC[i]
splitC[[i]]
View(virtDCF)
View(virtDCF)
c <- virtDCF[splitC[[i]],]
View(c)
tmp <- c[rep(nrow(c),nrow(f)),]
max.c <- max(c$diskidx)
tmp <- c[rep(nrow(c),nrow(f)),]
tmp$diskidx <- tmp$diskidx + 1:nrow(f)
View(tmp)
c <- rbind(c,tmp)
View(c)
View(f)
View(f)
newvirtDCF <- sapply(seq_len(4),function(i){
f <- df[splitF[[i]],]
c <- virtDCF[splitC[[i]],]
len.f <- nrow(f)
len.c <- nrow(c)
max.c <- max(c$diskidx)
# Add New
tmp <- c[rep(len.c,len.f),]
tmp$diskidx <- tmp$diskidx + 1:len.f
tmp$use_time <- f$f_time
c <- rbind(c,tmp)
# Add failure
c$status[1:len.f] <- 'failed'
c$f_time[1:len.f] <- f$f_time
# curFtime <- df$f_time[i]
# print(i)
# idxc <- mer[[i]]
# idx <- min(idxc[virtDC$status[idxc] == 'working'])
#
# tmp <- virtDC[idx,]
# tmp$use_time <- curFtime
# tmp$diskidx <- max(virtDC$diskidx[idxc]) + 1
# tmpCol[[i]] <- tmp
#
# virtDC$status[idx] <- 'failed'
# virtDC$f_time[idx] <- curFtime
})
newvirtDCF <- do.call(rbind,newvirtDCF)
newvirtDCF <- sapply(seq_len(4),function(i){
f <- df[splitF[[i]],]
c <- virtDCF[splitC[[i]],]
len.f <- nrow(f)
len.c <- nrow(c)
max.c <- max(c$diskidx)
# Add New
tmp <- c[rep(len.c,len.f),]
tmp$diskidx <- tmp$diskidx + 1:len.f
tmp$use_time <- f$f_time
c <- rbind(c,tmp)
# Add failure
c$status[1:len.f] <- 'failed'
c$f_time[1:len.f] <- f$f_time
c
# curFtime <- df$f_time[i]
# print(i)
# idxc <- mer[[i]]
# idx <- min(idxc[virtDC$status[idxc] == 'working'])
#
# tmp <- virtDC[idx,]
# tmp$use_time <- curFtime
# tmp$diskidx <- max(virtDC$diskidx[idxc]) + 1
# tmpCol[[i]] <- tmp
#
# virtDC$status[idx] <- 'failed'
# virtDC$f_time[idx] <- curFtime
})
newvirtDCF <- do.call(rbind,newvirtDCF)
View(newvirtDCF)
newvirtDCF <- sapply(seq_len(4),function(i){
f <- df[splitF[[i]],]
c <- virtDCF[splitC[[i]],]
len.f <- nrow(f)
len.c <- nrow(c)
max.c <- max(c$diskidx)
# Add New
tmp <- c[rep(len.c,len.f),]
tmp$diskidx <- tmp$diskidx + 1:len.f
tmp$use_time <- f$f_time
c <- rbind(c,tmp)
# Add failure
c$status[1:len.f] <- 'failed'
c$f_time[1:len.f] <- f$f_time
c
})
i=1
f <- df[splitF[[i]],]
c <- virtDCF[splitC[[i]],]
len.f <- nrow(f)
len.c <- nrow(c)
max.c <- max(c$diskidx)
# Add New
tmp <- c[rep(len.c,len.f),]
tmp$diskidx <- tmp$diskidx + 1:len.f
tmp$use_time <- f$f_time
c <- rbind(c,tmp)
# Add failure
c$status[1:len.f] <- 'failed'
c$f_time[1:len.f] <- f$f_time
c
View(c)
newvirtDCF <- lapply(seq_len(4),function(i){
f <- df[splitF[[i]],]
c <- virtDCF[splitC[[i]],]
len.f <- nrow(f)
len.c <- nrow(c)
max.c <- max(c$diskidx)
# Add New
tmp <- c[rep(len.c,len.f),]
tmp$diskidx <- tmp$diskidx + 1:len.f
tmp$use_time <- f$f_time
c <- rbind(c,tmp)
# Add failure
c$status[1:len.f] <- 'failed'
c$f_time[1:len.f] <- f$f_time
c
})
newvirtDCF <- do.call(rbind,newvirtDCF)
View(newvirtDCF)
splitC[1:4]
splitF[1:4]
source('~/Code/R/attrid/sc16F1Func.R')
source('~/Code/R/attrid/sc16F1Func.R')
# Plot for sc16
rm(list = ls())
#@@@ CONFIGURE @@@#
source('head.R')
require(ggplot2)
#@@@ Function @@@#
source(file.path(dir_code,'attr_function.R'))
source(file.path(dir_code,'sc16F1Func.R'))
#####################################################################################################
# S1. plot correlation between disk age and AFR
Qu <- 1 # cut by each quauters
flistFile <- 'dataPrepareAFR13.Rda'
# flistFile <- 'dataPrepareAFR1406_1407.Rda'
load(file.path(dir_data,flistFile))
tmp.f <- factorX(tmp.f)
tmp.cmdb <- factorX(tmp.cmdb)
tmp.f$fsTimeQu <- cut3mon(tmp.f$failShiptime)
tmp.cmdb$shTimeQu <- cut3mon(tmp.cmdb$shiptimeToRight)
tmp.f$shTimeQu <- tmp.cmdb$shTimeQu[match(tmp.f$svr_id,tmp.cmdb$svr_asset_id)]
tmp.f$diskNum <- tmp.cmdb$diskNum[match(tmp.f$svr_id,tmp.cmdb$svr_asset_id)]
virtDC <- virt_disk(tmp.f,tmp.cmdb)
source('~/Code/R/attrid/sc16F1Func.R')
virtDC <- virt_disk(tmp.f,tmp.cmdb)
df <- tmp.f;dc <- tmp.cmdb
colC <- c('svr_asset_id','dev_class_id','ip','raid','use_time','dClass',
'shiptimeToLeft','shiptimeToRight','shTimeQu')
idx.rep <- rep(seq_len(nrow(dc)),dc$diskNum)
diskidx <- unlist(tapply(idx.rep,idx.rep,function(x)seq_len(length(x))))
virtDC <- dc[idx.rep, colC]
virtDC$diskidx <- diskidx
virtDC$status <- 'working'
virtDC$f_time <- as.POSIXct('2014-01-01',tz = 'UTC')
virtDC <- virtDC[order(virtDC$svr_asset_id),]
virtDC$id <- seq_len(nrow(virtDC))
virtDCF <- factorX(subset(virtDC,svr_asset_id %in% df$svr_id))
virtDCN <- factorX(subset(virtDC,!(svr_asset_id %in% df$svr_id)))
df <- df[order(df$svr_id),]
df$id <- seq_len(nrow(df))
408205+4592
virtDC <- virt_disk(tmp.f,tmp.cmdb)
virtDC$survTime <- cut3mon(difftime(virtDC$f_time,virtDC$use_time,tz = 'UTC'))
tmp.df <- subset(virtDC,status = 'failed')
tmp.df <- subset(virtDC,status == 'failed')
tmp.dcmdb <- subset(virtDC,status == 'working')
cm1 <- AFR_attr_notime(tmp.df,tmp.dcmdb,'survTime','survTime',1,dev = 'C')
cm2 <- AFR_attr_notime(tmp.f,tmp.cmdb,'survTime','survTime',12,dev = 'TS')
View(cm1)
virtDC$survTime <- cut3mon(difftime(virtDC$f_time,virtDC$use_time,tz = 'UTC',units = 'years'))
virtDC$survTime <- cut3mon(difftime(virtDC$f_time,virtDC$use_time,tz = 'UTC',units = 'days')/365)
table(virtDC$survTime)
tmp.df <- subset(virtDC,status == 'failed')
tmp.dcmdb <- subset(virtDC,status == 'working')
cm1 <- AFR_attr_notime(tmp.df,tmp.dcmdb,'survTime','survTime',1,dev = 'C')
cm2 <- AFR_attr_notime(tmp.f,tmp.cmdb,'survTime','survTime',12,dev = 'TS')
cm2 <- AFR_attr_notime(tmp.df,tmp.dcmdb,'survTime','survTime',12,dev = 'TS')
cm <- rbind(cm1,cm2)
View(cm)
cm <- factorX(subset(cm,!is.na(AFR)))
View(cm)
cm <- classExchg(cm)
cm <- subset(cm,item < 6)
p <- AFR_plot(cm,'fig1')
View(cm)
View(cm)
a <- tmp.df[tmp.df$survTime == 1.75]
a <- tmp.df[tmp.df$survTime == 1.75,]
View(a)
summary(virtDC$survTime)
virtDC$survTime <- cut3mon(as.numeric(difftime(virtDC$f_time,virtDC$use_time,tz = 'UTC',units = 'days'))/365)
summary(virtDC$survTime)
a <- subset(virtDC,survTime <= 0)
View(a)
b <- tmp.f[tmp.f$svr_id == 'TYSV09030476-L',]
View(b)
a <- subset(virtDC,survTime < 0)
View(a)
b <- tmp.f[tmp.f$svr_id == 'TYSV12122459',]
View(b)
# Plot for sc16
rm(list = ls())
#@@@ CONFIGURE @@@#
source('head.R')
load(file.path(dir_dataSource,'load_ftr_attrid.Rda'))
useOld <- 1
a <- subset(data.fMore,svr_id == 'TYSV09030476-L')
View(a)
setwd('~/Code/R')
setwd('~/Code/R/dataLoadforDiskAnalysis/')
#@@@ 合并故障单,计算上架时间
rm(list = ls())
source('head.R')
# 1. 读取uwork数据,因为helper中是有use_time的,所以把uwork也加一个use_time
load(file.path(dir_data,'flist(uwork[2012-2014]).Rda'))
data.flist_uwork <- data.flist[,c('ip','svr_id','f_time','class','ftype','group')]
# 2. 读取helper数据
load(file.path(dir_data,'flist(helper[2008-2013]).Rda'))
data.flist_helper <- data.flist[,c('ip','svr_id','f_time','class','ftype','group')]
# 3. 合并数据
data.flist <- rbind(data.flist_helper,data.flist_uwork)
data.flist$group <- factor(data.flist$group)
data.flist <- factorX(data.flist)
a <- subset(data.flist,svr_id == 'TYSV12122459')
View(a)
a <- subset(data.flist,svr_id == 'TYSV09030476-L')
View(a)
dayDup <- 3
data.pretFlist <- subset(data.flist,class == -1)
data.flist <- subset(data.flist,class != -1)
a <- subset(data.flist,svr_id == 'TYSV09030476-L')
data.flist <- dedupTime(data.flist,dayDup)
a <- subset(data.flist,svr_id == 'TYSV09030476-L')
View(a)
b <- dedupTime(a,3)
a
b <- dedupTime(a,3)
a <- subset(data.flist,svr_id == 'TYSV09030476-L')
dedupTime(a,3)
data.flist <- 3
data.flist <- a
dayDup <- 3
data.flist <- data.flist[order(data.flist$ip,data.flist$f_time),]
data.flist$svr_id <- as.character(data.flist$svr_id)
delset <- numeric()
pSvrid <- data.flist$svr_id[1]
pFtime <- data.flist$f_time[1]
i=2
curSvrid <- data.flist$svr_id[i]
curFtime <- data.flist$f_time[i]
curSvrid == pSvrid
difftime(curFtime,pFtime,tz = 'UTC',units = 'days') > dayDup
curFtime
pFtime
pFtime <- curFtime
i =3
curSvrid <- data.flist$svr_id[i]
curFtime <- data.flist$f_time[i]
curSvrid == pSvrid &
difftime(curFtime,pFtime,tz = 'UTC',units = 'days') > dayDup
source('~/Code/R/dataLoadforDiskAnalysis/loadFunc.R')
dedupTime(a,3)
source('~/Code/R/dataLoadforDiskAnalysis/Failure_list_preprocess(ALL).R')
source('~/Code/R/dataLoadforDiskAnalysis/Disk_number_label.R')
source('~/Code/R/dataLoadforDiskAnalysis/attr_load.R')
source('~/Code/R/dataLoadforDiskAnalysis/attr_load.R')
a <- data.f[data.f$use_time > data.f$f_time,]
a <- subset(data.flist,use_time > f_time)
a <- subset(data.flist,svr_id == 'TYSV09030476-L')
View(a)
