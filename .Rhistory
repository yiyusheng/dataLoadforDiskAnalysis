df$class <- x$tagDisk[1]
df})
staTime <- do.call(rbind,staTime)
View(staTime)
names(staTime) <- c('date','numServer','tagDisk')
staTime$date <- as.Date(staTime$date)
p1 <- ggplot(staTime,aes(x = date,y = numServer,fill = tagDisk)) + geom_bar()
print(p1)
p1 <- ggplot(staTime,aes(x = date,y = numServer,fill = tagDisk)) + geom_bar(stat = 'identity')
print(p1)
staTime$numServer[grepl('B',staTime$tagDisk)] <- staTime$numServer[grepl('B',staTime$tagDisk)]*12
p1 <- ggplot(staTime,aes(x = date,y = numServer,fill = tagDisk)) + geom_bar(stat = 'identity')
print(p1)
pA <- ggplot(subset(staTime,grepl('A',tagDisk)),aes(x = date,y = numServer,fill = tagDisk)) +
geom_bar(stat = 'identity')
print(pA)
pB <- ggplot(subset(staTime,grepl('B',tagDisk)),aes(x = date,y = numServer,fill = tagDisk)) +
geom_bar(stat = 'identity')
print(pA)
print(pB)
pA <- ggplot(subset(staTime,grepl('A',tagDisk)),aes(x = date,y = numServer,fill = tagDisk)) +
geom_bar(stat = 'identity',fill = 'fill')
print(pA)
pA <- ggplot(subset(staTime,grepl('A',tagDisk)),aes(x = date,y = numServer,fill = tagDisk)) +
geom_bar(stat = 'identity',position = 'fill')
print(pA)
pB <- ggplot(subset(staTime,grepl('B',tagDisk)),aes(x = date,y = numServer,fill = tagDisk)) +
geom_bar(stat = 'identity')
print(pB)
pB <- ggplot(subset(staTime,grepl('B',tagDisk)),aes(x = date,y = numServer,fill = tagDisk)) +
geom_bar(stat = 'identity',position = 'fill')
print(pB)
pA <- ggplot(subset(staTime,grepl('A',tagDisk)),aes(x = date,y = numServer,fill = tagDisk)) +
geom_bar(stat = 'identity',position = 'fill')
print(pA)
pA <- ggplot(subset(staTime,grepl('A',tagDisk)),aes(x = date,y = numServer,fill = tagDisk)) +
geom_bar(stat = 'identity')
print(pA)
pB <- ggplot(subset(staTime,grepl('B',tagDisk)),aes(x = date,y = numServer,fill = tagDisk)) +
geom_bar(stat = 'identity')
print(pB)
load(file.path(dir_data,'dataPrepareAFR1306_1307.Rda'))
c13 <- subset(tmp.cmdb,tagDisk %in% c(tagA,tagB))
tagA <- 'A-ST3500514NS';tagB <- 'B-ST31000524NS'
c13 <- subset(tmp.cmdb,tagDisk %in% c(tagA,tagB))
f13 <- subset(tmp.f,tagDisk %in% c(tagA,tagB))
table(f13$tagDisk)
load(file.path(dir_data,'dataPrepareAFR1406_1407.Rda'))
c14 <- subset(tmp.cmdb,tagDisk %in% c(tagA,tagB))
f14 <- subset(tmp.f,tagDisk %in% c(tagA,tagB))
ggplot(f13,aes(x = f_time)) + geom_histogram()
ggplot(f14,aes(x = f_time)) + geom_histogram()
ggplot(f13,aes(x = f_time)) + geom_histogram()
ggplot(f14,aes(x = f_time)) + geom_histogram()
?geom_histogram
View(f13)
View(f14)
quantile(f13$shiptimeToLeft)
quantile(f14$shiptimeToLeft)
fr13 <- ioAFR(c13,f13,c('shTime','tagDisk'))
source(file.path(dir_data,'sc16F1Func.R'))
source
source(file.path(dir_data,'sc16F1Func.R'))
source(file.path(dir_code,'sc16F1Func.R'))
fr13 <- ioAFR(c13,f13,c('shTime','tagDisk'))
fr14 <- ioAFR(c14,f14,c('shTime','tagDisk'))
View(fr13)
View(fr14)
fr13 <- ioAFR(c13,f13,c('tagDisk','shTime'))
fr14 <- ioAFR(c14,f14,c('tagDisk','shTime'))
View(fr13)
View(fr14)
fr13 <- ioAFR(c13,f13,c('tagDisk','shTime'))
fr13$class <- 'y13'
fr14 <- ioAFR(c14,f14,c('tagDisk','shTime'))
fr14$class <- 'y14'
frAge <- rbind(fr13,fr14)
View(frAge)
frAge$AFR <- frAge$AFR*6
ggplot(frAge,aes(x = shTime,y = AFR,color = class,linetype = tagDisk)) + geom_line()
frAge <- frAge[order(frAge$tagDisk,frAge$shTime),]
View(frAge)
frAge <- frAge[order(frAge$tagDisk,frAge$shTime,frAge$class),]
View(frAge)
ggplot(subset(frAge,grepl('A',tagDisk)),aes(x = shTime,y = AFR,color = class)) + geom_line()
ggplot(subset(frAge,grepl('B',tagDisk)),aes(x = shTime,y = AFR,color = class)) + geom_line()
ggplot(subset(frAge,grepl('A',tagDisk)),aes(x = shTime,y = AFR,color = class)) + geom_line()
load(file.path(dir_data,'dataPrepareAFR1306_1307.Rda'))
c13 <- subset(tmp.cmdb,tagDisk %in% c(tagA,tagB))
f13 <- subset(tmp.f,tagDisk %in% c(tagA,tagB))
load(file.path(dir_data,'dataPrepareAFR1304_1305.Rda'))
c14 <- subset(tmp.cmdb,tagDisk %in% c(tagA,tagB))
f14 <- subset(tmp.f,tagDisk %in% c(tagA,tagB))
source(file.path(dir_code,'sc16F1Func.R'))
fr13 <- ioAFR(c13,f13,c('tagDisk','shTime'))
fr13$class <- 'y13'
fr14 <- ioAFR(c14,f14,c('tagDisk','shTime'))
fr14$class <- 'y14'
frAge <- rbind(fr13,fr14)
frAge$AFR <- frAge$AFR*6
frAge <- frAge[order(frAge$tagDisk,frAge$shTime,frAge$class),]
ggplot(subset(frAge,grepl('A',tagDisk)),aes(x = shTime,y = AFR,color = class)) + geom_line()
ggplot(subset(frAge,grepl('B',tagDisk)),aes(x = shTime,y = AFR,color = class)) + geom_line()
load(file.path(dir_data,'dataPrepareAFR1306_1307.Rda'))
c13 <- subset(tmp.cmdb,tagDisk %in% c(tagA,tagB))
f13 <- subset(tmp.f,tagDisk %in% c(tagA,tagB))
load(file.path(dir_data,'dataPrepareAFR1303_1304.Rda'))
c14 <- subset(tmp.cmdb,tagDisk %in% c(tagA,tagB))
f14 <- subset(tmp.f,tagDisk %in% c(tagA,tagB))
source(file.path(dir_code,'sc16F1Func.R'))
fr13 <- ioAFR(c13,f13,c('tagDisk','shTime'))
fr13$class <- 'y13'
fr14 <- ioAFR(c14,f14,c('tagDisk','shTime'))
fr14$class <- 'y14'
frAge <- rbind(fr13,fr14)
frAge$AFR <- frAge$AFR*6
frAge <- frAge[order(frAge$tagDisk,frAge$shTime,frAge$class),]
ggplot(subset(frAge,grepl('B',tagDisk)),aes(x = shTime,y = AFR,color = class)) + geom_line()
load(file.path(dir_data,'dataPrepareAFR1306_1307.Rda'))
c13 <- subset(tmp.cmdb,tagDisk %in% c(tagA,tagB))
f13 <- subset(tmp.f,tagDisk %in% c(tagA,tagB))
load(file.path(dir_data,'dataPrepareAFR1302_1303.Rda'))
c14 <- subset(tmp.cmdb,tagDisk %in% c(tagA,tagB))
f14 <- subset(tmp.f,tagDisk %in% c(tagA,tagB))
source(file.path(dir_code,'sc16F1Func.R'))
fr13 <- ioAFR(c13,f13,c('tagDisk','shTime'))
fr13$class <- 'y13'
fr14 <- ioAFR(c14,f14,c('tagDisk','shTime'))
fr14$class <- 'y14'
frAge <- rbind(fr13,fr14)
frAge$AFR <- frAge$AFR*6
frAge <- frAge[order(frAge$tagDisk,frAge$shTime,frAge$class),]
ggplot(subset(frAge,grepl('B',tagDisk)),aes(x = shTime,y = AFR,color = class)) + geom_line()
ggplot(subset(frAge,grepl('A',tagDisk)),aes(x = shTime,y = AFR,color = class)) + geom_line()
setwd('../dataLoadforDiskAnalysis/')
source('~/Code/R/dataLoadforDiskAnalysis/Failure_list_preprocess(uwork).R')
#@@@ 合并故障单,计算上架时间
rm(list = ls())
source('head.R')
# 1. 读取uwork数据,因为helper中是有use_time的,所以把uwork也加一个use_time
load(file.path(dir_data,'flist(uwork[2012-2014]).Rda'))
data.flist_uwork <- data.flist[,c('ip','svr_id','f_time','class','ftype','group')]
# 2. 读取helper数据
load(file.path(dir_data,'flist(helper[2008-2013]).Rda'))
data.flist_helper <- data.flist[,c('ip','svr_id','f_time','class','ftype','group')]
data.flist <- rbind(data.flist_helper,data.flist_uwork)
data.flist$group <- factor(data.flist$group)
data.flist <- factorX(data.flist)
library(ggplot2)
ggplot(data.flist,aes(x = f_time,fill = group)) + geom_histogram(bins = 60)
# failure list duplication, statistic failure times, extract first failure time
rm(list = ls())
source('head.R')
require(data.table)
####################################
# 1. read data
data.flA <- read.csv(file.path(dir_data,'uwork_20120101-20131210.csv'))
data.flB <- read.csv(file.path(dir_data,'故障单精简_06-09.csv'))
# Read data C
data.flC <- fread(file.path(dir_data,'硬盘故障单140101_141231A.txt'),
sep = '~',header = F,encoding = 'UTF-8')
tenc_fail_record_parse <- function(str){
s <- strsplit(str,split = '\t')[[1]]
len <- length(s)
if (len != 10){
s1 <- character(10)
s1[1:5] <- s[1:5]
s1[6] <- paste(s[6:(len-4)],sep='',collapse = '')
s1[7:10] <- s[(len-3):len]
s <- s1
}
s
}
tmp <- sapply(1:nrow(data.flC),function(i)tenc_fail_record_parse(data.flC[i]$V1))
data.flC <- data.frame(t(tmp[,2:nrow(data.flC)]))
names(data.flC) <- tmp[,1]
data.flC$createtime <- as.POSIXct(fct2ori(data.flC$createtime),tz = 'UTC')
View(data.flC)
names(data.flC) <- c('extractDate','id','svr_id','svr_sn','ip',
'faultInfo','f_time','f_time1','tag')
data.flC$ftype <- '硬盘故障（有冗余）';
data.flC$ftype_d1 <- '硬盘故障'
col_need <- c('svr_id','ip','ftype','f_time','ftype_d1','ftype_d2')
data.flA <- data.flA[,col_need]
names(data.flA) <- c('id','svr_id','ip','ftype','ori_ftype',
'f_time','ftype_d1','ftype_d2','ftype_d')
names(data.flB) <- c('id','svr_id','ip','ftype',
'idc','dev_class_name','dev_class_id','dept_id',
'f_time','f_desc','ftype_d1','ftype_d2')
col_need <- c('svr_id','ip','ftype','f_time','ftype_d1','ftype_d2')
data.flA <- data.flA[,col_need]
data.flB <- data.flB[,col_need]
data.flC <- data.flC[,col_need]
data.flC$ftype_d1 <- '硬盘故障'
data.flC$ftype_d2 <- '硬盘故障'
# merge failure record
col_need <- c('svr_id','ip','ftype','f_time','ftype_d1','ftype_d2')
data.flA <- data.flA[,col_need]
data.flB <- data.flB[,col_need]
data.flC <- data.flC[,col_need]
data.flA$group <- 'uworkA'
data.flB$group <- 'uworkB'
data.flC$group <- 'uworkC'
data.fl <- rbind(data.flA,data.flB)
data.fl$f_time <- as.POSIXct(data.fl$f_time,tz = 'UTC')
data.fl$ftype <- as.character(data.fl$ftype)
data.fl$ftype[data.fl$ftype == '硬盘故障（有冗余） '] <- '硬盘故障（有冗余）'
data.fl$ftype <- factor(data.fl$ftype)
# 3. add class
data.fl$class <- -1
ftlist <- c('硬盘故障（有冗余）','硬盘故障（有冗余，槽位未知）',
'硬盘故障（无冗余）','硬盘故障（无冗余，在线换盘）',
'硬盘即将故障（有冗余）','操作系统硬盘故障（无冗余）')
data.fl$class[(data.fl$ftype_d1 == '硬盘故障;' | data.fl$ftype_d2 == '硬盘故障;')] <- 7
# 4. delete item without ip
data.fl_order <- data.fl[with(data.fl,order(ip,f_time)),]
data.fl_order <- data.fl_order[data.fl_order$ip!='',]           # delete item without ip
data.fl_order$ip <- factor(data.fl_order$ip)                    # reconstruct factor of ip
# 5. filter wrong ip
regexp.ip <- "^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$"
idx.ip_reg <- grepl(regexp.ip,data.fl_order$ip)
data.fl_order <- data.fl_order[idx.ip_reg,]
table(data.fl$ftype)
a <- melt(table(data.fl$ftype))
View(a)
data.fl <- subset(data.fl,ftype %in% ftlist)
data.flist <- data.fl_order
rownames(data.flist) <- NULL
data.bad <- subset(data.flist,class!=-1)
source('~/Code/R/dataLoadforDiskAnalysis/Failure_list_preprocess(uwork).R')
rm(list = ls())
source('head.R')
# 1. 读取uwork数据
load(file.path(dir_data,'flist(uwork[2012-2014]).Rda'))
data.flist_uwork <- data.flist[,c('ip','svr_id','f_time','class','ftype','group')]
load(file.path(dir_data,'flist(uwork[2012-2014]).Rda'))
data.flist_uwork <- data.flist[,c('ip','svr_id','f_time','class','ftype','group')]
# 2. 读取helper数据
load(file.path(dir_data,'flist(helper[2008-2013]).Rda'))
data.flist_helper <- data.flist[,c('ip','svr_id','f_time','class','ftype','group')]
# 3. 合并数据
data.flist <- rbind(data.flist_helper,data.flist_uwork)
data.flist$group <- factor(data.flist$group)
data.flist <- factorX(data.flist)
#@@@ 合并故障单,计算上架时间
rm(list = ls())
source('head.R')
# 1. 读取uwork数据
load(file.path(dir_data,'flist(uwork[2012-2014]).Rda'))
data.flist_uwork <- data.flist[,c('ip','svr_id','f_time','class','ftype','group')]
# 2. 读取helper数据
load(file.path(dir_data,'flist(helper[2008-2013]).Rda'))
data.flist_helper <- data.flist[,c('ip','svr_id','f_time','class','ftype','group')]
# 3. 合并数据
data.flist <- rbind(data.flist_helper,data.flist_uwork)
data.flist$group <- factor(data.flist$group)
data.flist <- factorX(data.flist)
table(data.flist$group)
load(file.path(dir_data,'flist(uwork[2012-2014]).Rda'))
table(data.flist$class)
#@@@ 合并故障单,计算上架时间
rm(list = ls())
source('head.R')
# 1. 读取uwork数据
load(file.path(dir_data,'flist(uwork[2012-2014]).Rda'))
data.flist_uwork <- data.flist[,c('ip','svr_id','f_time','class','ftype','group')]
# 2. 读取helper数据
load(file.path(dir_data,'flist(helper[2008-2013]).Rda'))
data.flist_helper <- data.flist[,c('ip','svr_id','f_time','class','ftype','group')]
# 3. 合并数据
data.flist <- rbind(data.flist_helper,data.flist_uwork)
data.flist$group <- factor(data.flist$group)
data.flist <- factorX(data.flist)
table(data.flist$class)
source('~/Code/R/dataLoadforDiskAnalysis/Failure_list_preprocess(ALL).R')
a <- dudupTime(data.flist_uwork,dayDup,'svr_id')
a <- dedupTime(data.flist_uwork,dayDup,'svr_id')
a1 <- a[a$class != -1,]
a2 <- data.flist_uworkp[data.flist_uwork$class != -1]
a2 <- data.flist_uwork[data.flist_uwork$class != -1]
a2 <- data.flist_uwork[data.flist_uwork$class != -1,]
source('~/Code/R/dataLoadforDiskAnalysis/Failure_list_preprocess(uwork).R')
# failure list duplication, statistic failure times, extract first failure time
rm(list = ls())
source('head.R')
require(data.table)
####################################
# 1. read data
data.flA <- read.csv(file.path(dir_data,'uwork_20120101-20131210.csv'))
data.flB <- read.csv(file.path(dir_data,'故障单精简_06-09.csv'))
names(data.flA) <- c('id','svr_id','ip','ftype','ori_ftype',
'f_time','ftype_d1','ftype_d2','ftype_d')
names(data.flB) <- c('id','svr_id','ip','ftype',
'idc','dev_class_name','dev_class_id','dept_id',
'f_time','f_desc','ftype_d1','ftype_d2')
# Read data C
data.flC <- fread(file.path(dir_data,'硬盘故障单140101_141231A.txt'),
sep = '~',header = F,encoding = 'UTF-8')
tenc_fail_record_parse <- function(str){
s <- strsplit(str,split = '\t')[[1]]
len <- length(s)
if (len != 10){
s1 <- character(10)
s1[1:5] <- s[1:5]
s1[6] <- paste(s[6:(len-4)],sep='',collapse = '')
s1[7:10] <- s[(len-3):len]
s <- s1
}
s
}
tmp <- sapply(1:nrow(data.flC),function(i)tenc_fail_record_parse(data.flC[i]$V1))
data.flC <- data.frame(t(tmp[,2:nrow(data.flC)]))
names(data.flC) <- tmp[,1]
data.flC$createtime <- as.POSIXct(fct2ori(data.flC$createtime),tz = 'UTC')
names(data.flC) <- c('extractDate','id','svr_id','svr_sn','ip',
'faultInfo','f_time','f_time1','tag')
data.flC$ftype <- '硬盘故障（有冗余）';
data.flC$ftype_d1 <- '硬盘故障'
data.flC$ftype_d2 <- '硬盘故障'
col_need <- c('svr_id','ip','ftype','f_time','ftype_d1','ftype_d2')
data.flA <- data.flA[,col_need]
data.flB <- data.flB[,col_need]
data.flC <- data.flC[,col_need]
data.flA$group <- 'uworkA'
data.flB$group <- 'uworkB'
data.flC$group <- 'uworkC'
data.fl <- rbind(data.flA,data.flB,data.flC)
data.fl$f_time <- as.POSIXct(data.fl$f_time,tz = 'UTC')
tmp <- fread(file.path(dir_data,'硬盘故障单140101_141231A.txt'),
sep = '~',header = F,encoding = 'UTF-8')
tenc_fail_record_parse <- function(str){
s <- strsplit(str,split = '\t')[[1]]
len <- length(s)
if (len != 10){
s1 <- character(10)
s1[1:5] <- s[1:5]
s1[6] <- paste(s[6:(len-4)],sep='',collapse = '')
s1[7:10] <- s[(len-3):len]
s <- s1
}
s
}
tmp <- sapply(1:nrow(tmp),function(i)tenc_fail_record_parse(tmp[i]$V1))
readC <- fread(file.path(dir_data,'硬盘故障单140101_141231A.txt'),
sep = '~',header = F,encoding = 'UTF-8')
tenc_fail_record_parse <- function(str){
s <- strsplit(str,split = '\t')[[1]]
len <- length(s)
if (len != 10){
s1 <- character(10)
s1[1:5] <- s[1:5]
s1[6] <- paste(s[6:(len-4)],sep='',collapse = '')
s1[7:10] <- s[(len-3):len]
s <- s1
}
s
}
tmp <- sapply(1:nrow(readC),function(i)tenc_fail_record_parse(readC[i]$V1))
data.flC <- data.frame(t(tmp[,2:nrow(readC)]))
names(data.flC) <- tmp[,1]
data.flC$createtime <- as.POSIXct(fct2ori(data.flC$createtime),tz = 'UTC')
names(data.flC) <- c('extractDate','id','svr_id','svr_sn','ip',
'faultInfo','f_time','f_time1','tag')
data.flC <- data.frame(t(tmp[,2:nrow(readC)]))
names(data.flC) <- tmp[,1]
data.flC$createtime <- as.POSIXct(fct2ori(data.flC$createtime),tz = 'UTC')
table(data.flC$faulttypename)
names(data.flC) <- c('extractDate','id','svr_id','svr_sn','ip',
'faultInfo','ftype','f_time','f_time1','tag')
data.flC$ftype_d1 <- '硬盘故障'
data.flC$ftype_d2 <- '硬盘故障'
# merge failure record
col_need <- c('svr_id','ip','ftype','f_time','ftype_d1','ftype_d2')
data.flA <- data.flA[,col_need]
data.flB <- data.flB[,col_need]
data.flC <- data.flC[,col_need]
data.flA$group <- 'uworkA'
data.flB$group <- 'uworkB'
data.flC$group <- 'uworkC'
data.fl <- rbind(data.flA,data.flB,data.flC)
data.fl$f_time <- as.POSIXct(data.fl$f_time,tz = 'UTC')
data.fl <- rbind(data.flA,data.flB,data.flC)
data.flC$ftype_d1 <- factor('硬盘故障')
data.flC$ftype_d2 <- factor('硬盘故障')
# merge failure record
col_need <- c('svr_id','ip','ftype','f_time','ftype_d1','ftype_d2')
data.flA <- data.flA[,col_need]
data.flB <- data.flB[,col_need]
data.flC <- data.flC[,col_need]
data.flA$group <- 'uworkA'
data.flB$group <- 'uworkB'
data.flC$group <- 'uworkC'
data.fl <- rbind(data.flA,data.flB,data.flC)
data.flC <- data.frame(t(tmp[,2:nrow(readC)]))
names(data.flC) <- tmp[,1]
names(data.flC) <- c('extractDate','id','svr_id','svr_sn','ip',
'faultInfo','ftype','f_time','f_time1','tag')
data.flC$ftype_d1 <- factor('硬盘故障')
data.flC$ftype_d2 <- factor('硬盘故障')
# merge failure record
col_need <- c('svr_id','ip','ftype','f_time','ftype_d1','ftype_d2')
data.flA <- data.flA[,col_need]
data.flB <- data.flB[,col_need]
data.flC <- data.flC[,col_need]
data.flA$group <- 'uworkA'
data.flB$group <- 'uworkB'
data.flC$group <- 'uworkC'
data.fl <- rbind(data.flA,data.flB,data.flC)
data.fl$f_time <- as.POSIXct(data.fl$f_time,tz = 'UTC')
# 2. del space
data.fl$ftype <- as.character(data.fl$ftype)
data.fl$ftype[data.fl$ftype == '硬盘故障（有冗余） '] <- '硬盘故障（有冗余）'
data.fl$ftype <- factor(data.fl$ftype)
# 3. add class
data.fl$class <- -1
ftlist <- c('硬盘故障（有冗余）','硬盘故障（有冗余，槽位未知）',
'硬盘故障（无冗余）','硬盘故障（无冗余，在线换盘）',
'硬盘即将故障（有冗余）','操作系统硬盘故障（无冗余）')
data.fl$class[(data.fl$ftype_d1 == '硬盘故障;' | data.fl$ftype_d2 == '硬盘故障;')] <- 7
# 4. delete item without ip
data.fl_order <- data.fl[with(data.fl,order(ip,f_time)),]
data.fl_order <- data.fl_order[data.fl_order$ip!='',]           # delete item without ip
data.fl_order$ip <- factor(data.fl_order$ip)                    # reconstruct factor of ip
# 5. filter wrong ip
regexp.ip <- "^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$"
idx.ip_reg <- grepl(regexp.ip,data.fl_order$ip)
data.fl_order <- data.fl_order[idx.ip_reg,]
data.flist <- data.fl_order
rownames(data.flist) <- NULL
data.bad <- subset(data.flist,class!=-1)
b <- subset(data.bad,group == 'uworkB')
c <- subset(data.bad,group == 'uworkC')
data.flC <- data.frame(t(tmp[,2:nrow(readC)]))
names(data.flC) <- tmp[,1]
names(data.flC) <- c('extractDate','id','svr_id','svr_sn','ip',
'faultInfo','ftype','f_time','f_time1','tag')
data.flC$ftype_d1 <- factor('硬盘故障;')
data.flC$ftype_d2 <- factor('硬盘故障;')
# merge failure record
col_need <- c('svr_id','ip','ftype','f_time','ftype_d1','ftype_d2')
data.flA <- data.flA[,col_need]
data.flB <- data.flB[,col_need]
data.flC <- data.flC[,col_need]
data.flA$group <- 'uworkA'
data.flB$group <- 'uworkB'
data.flC$group <- 'uworkC'
data.fl <- rbind(data.flA,data.flB,data.flC)
data.fl$f_time <- as.POSIXct(data.fl$f_time,tz = 'UTC')
# 2. del space
data.fl$ftype <- as.character(data.fl$ftype)
data.fl$ftype[data.fl$ftype == '硬盘故障（有冗余） '] <- '硬盘故障（有冗余）'
data.fl$ftype <- factor(data.fl$ftype)
# 3. add class
data.fl$class <- -1
ftlist <- c('硬盘故障（有冗余）','硬盘故障（有冗余，槽位未知）',
'硬盘故障（无冗余）','硬盘故障（无冗余，在线换盘）',
'硬盘即将故障（有冗余）','操作系统硬盘故障（无冗余）')
data.fl$class[(data.fl$ftype_d1 == '硬盘故障;' | data.fl$ftype_d2 == '硬盘故障;')] <- 7
# 4. delete item without ip
data.fl_order <- data.fl[with(data.fl,order(ip,f_time)),]
data.fl_order <- data.fl_order[data.fl_order$ip!='',]           # delete item without ip
data.fl_order$ip <- factor(data.fl_order$ip)                    # reconstruct factor of ip
# 5. filter wrong ip
regexp.ip <- "^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$"
idx.ip_reg <- grepl(regexp.ip,data.fl_order$ip)
data.fl_order <- data.fl_order[idx.ip_reg,]
# 6. save
data.flist <- data.fl_order
rownames(data.flist) <- NULL
data.bad <- subset(data.flist,class!=-1)
b <- subset(data.bad,group == 'uworkB')
c <- subset(data.bad,group == 'uworkC')
b <- factorX(b);c <- factorX(c)
c1 <- subset(b,svr_id %in% c$svr_id)
quantile(b$f_time)
save(data.flist,data.bad,file = file.path(dir_data,'flist(uwork[2012-2014]).Rda'))
source('~/Code/R/dataLoadforDiskAnalysis/Failure_list_preprocess(ALL).R')
source('~/Code/R/dataLoadforDiskAnalysis/Failure_list_preprocess(uwork).R')
source('~/Code/R/dataLoadforDiskAnalysis/Failure_list_preprocess(ALL).R')
source('~/Code/R/dataLoadforDiskAnalysis/Info_load.R')
#@@@ 合并故障单,计算上架时间
rm(list = ls())
source('head.R')
# 1. 读取uwork数据
load(file.path(dir_data,'flist(uwork[2012-2014]).Rda'))
data.flist_uwork <- data.flist[,c('ip','svr_id','f_time','class','ftype','group')]
# 2. 读取helper数据
load(file.path(dir_data,'flist(helper[2008-2013]).Rda'))
data.flist_helper <- data.flist[,c('ip','svr_id','f_time','class','ftype','group')]
# 3. 合并数据. We use class == -1 to determine read failure
data.flist <- rbind(data.flist_helper,data.flist_uwork)
data.flist$group <- factor(data.flist$group)
data.flist <- factorX(data.flist)
dayDup <- 3
data.pretFlist <- subset(data.flist,class == -1)
data.flist <- subset(data.flist,class != -1)
table(data.flist$group)
data.flist <- dedupTime(data.flist,dayDup,'svr_id')
table(data.flist$group)
a <- data.flist_uwork[order(data.flist_uwork$group,decreasing = T),]
table(a$group)
head(a)
table(a$group)
b <- dedupTime(a,dayDup,'svr_id')
a <- data.flist_uwork[order(data.flist_uwork$group,decreasing = T),]
a <- a[a$class!= -1,]
table(a$group)
b <- dedupTime(a,dayDup,'svr_id')
table(b$group)
source('~/Code/R/dataLoadforDiskAnalysis/Failure_list_preprocess(uwork).R')
source('~/Code/R/dataLoadforDiskAnalysis/Failure_list_preprocess(ALL).R')
source('~/Code/R/dataLoadforDiskAnalysis/Info_load.R')
