source('~/Code/R/attrid/test_surv.R')
rm(list = ls())
source('head.R')
source('dirFunc.R')
load(file.path(dir_data,'dataLoad.Rda'))
add_ts <- function(ts,ts.start,ts.end,interval = 10){
div <- seq.POSIXt(ts.start,ts.end,interval*60)
cut.ts <- cut.POSIXt(ts,div)
}
df <- split.dataAP[[2-]]
df <- split.dataAP[[20]]
cat(sprintf('test_AFR::test_arima\t WIFIAPTag:%s\twid:%d\n',df$WIFIAPTag[1],df$wid[1]))
pred.start <- as.POSIXct('2016-09-13 15:00:00',tz = 'UTC')
pred.end <- as.POSIXct('2016-09-13 18:00:00',tz = 'UTC')
dfTrain <- subset(df,timeStamp < pred.start)
dfTest <- subset(df,timeStamp < pred.end & timeStamp >= pred.start)
fit <- auto.arima(dfTrain$passengerCount)
require(forecast)
require(forecast)
fit <- auto.arima(dfTrain$passengerCount)
rm(list = ls())
source('head.R')
source('dirFunc.R')
require(forecast)
load(file.path(dir_data,'dataLoad.Rda'))
add_ts <- function(ts,ts.start,ts.end,interval = 10){
div <- seq.POSIXt(ts.start,ts.end,interval*60)
cut.ts <- cut.POSIXt(ts,div)
}
df <- split.dataAP[[20]]
# Last   modified: 2016-10-11 17:23:02
rm(list = ls())
source('head.R')
source('dirFunc.R')
require(forecast)
load(file.path(dir_data,'dataLoad.Rda'))
####################################
# S1.calculate ACF for each AP in data.ap10min (k = 1 to 18)
# tmp <- lapply(split.dataAP10min,function(df){
#               len <- length(df$passengerCount)
#               pc.diff <- df$passengerCount[2:len] - df$passengerCount[1:(len-1)]
#               acf(pc.diff,lag.max = 18,plot = F)
#               })
# tmp <- lapply(tmp,function(x)x$acf)
# tmp <- do.call(rbind,tmp)
#
add_ts <- function(ts,ts.start,ts.end,interval = 10){
div <- seq.POSIXt(ts.start,ts.end,interval*60)
cut.ts <- cut.POSIXt(ts,div)
}
source('~/Code/R/TC_airport/dirFunc.R')
rm(list = ls())
source('head.R')
source('dirFunc.R')
require(forecast)
load(file.path(dir_data,'dataLoad.Rda'))
df <- split.dataAP[[1]]
pred.start <- as.POSIXct('2016-09-13 15:00:00',tz = 'UTC')
pred.end <- as.POSIXct('2016-09-13 18:00:00',tz = 'UTC')
dfTrain <- subset(df,timeStamp < pred.start)
dfTest <- subset(df,timeStamp < pred.end & timeStamp >= pred.start)
fit <- auto.arima(dfTrain$passengerCount)
dfTest$pred <- forecast(fit,nrow(dfTest))$mean
dfTest$ts10min <- add_ts(dfTest$timeStamp,pred.start,pred.end,10)
dfTest.10min <- data.frame(WIFIAPTag = dfTest$WIFIAPTag[1],
timeStamp = levels(dfTest$ts10min),
passengerCount = as.numeric(tapply(dfTest$passengerCount,
dfTest$ts10min,sum)),
pred = as.numeric(tapply(dfTest$pred,dfTest$ts10min,sum)))
dfTest.10min$error <- (dfTest.10min$passengerCount - dfTest.10min$pred)^2
sum.error.10min <- sum(dfTest.10min$error)
dfTest$error <- (dfTest$passengerCount - dfTest$pred)^2
sum.error <- sum(dfTest$error)
df <- split.dataAP[[1]]
pred.start <- as.POSIXct('2016-09-13 15:00:00',tz = 'UTC')
pred.end <- as.POSIXct('2016-09-13 18:00:00',tz = 'UTC')
dfTrain <- subset(df,timeStamp < pred.start)
dfTest <- subset(df,timeStamp < pred.end & timeStamp >= pred.start)
fit <- auto.arima(dfTrain$passengerCount)
dfTest$pred <- forecast(fit,nrow(dfTest))$mean
dfTest$error <- (dfTest$passengerCount - dfTest$pred)^2
sum.error <- sum(dfTest$error)
# for 10 mins
dfTest$ts10min <- add_ts(dfTest$timeStamp,pred.start,pred.end,10)
dfTest.10min <- data.frame(WIFIAPTag = dfTest$WIFIAPTag[1],
timeStamp = levels(dfTest$ts10min),
passengerCount = as.numeric(tapply(dfTest$passengerCount,
dfTest$ts10min,sum)),
pred = as.numeric(tapply(dfTest$pred,dfTest$ts10min,sum)))
dfTest.10min$error <- (dfTest.10min$passengerCount - dfTest.10min$pred)^2
sum.error.10min <- sum(dfTest.10min$error)
cat(sprintf('test_AFR::test_arima\t WIFIAPTag:%s\twid:%d\n',df$WIFIAPTag[1],df$wid[1]))
pred.start <- as.POSIXct('2016-09-13 15:00:00',tz = 'UTC')
pred.end <- as.POSIXct('2016-09-13 18:00:00',tz = 'UTC')
dfTrain <- subset(df,timeStamp < pred.start)
dfTest <- subset(df,timeStamp < pred.end & timeStamp >= pred.start)
fit <- auto.arima(dfTrain$passengerCount)
dfTest$pred <- forecast(fit,nrow(dfTest))$mean
dfTest$error <- (dfTest$passengerCount - dfTest$pred)^2
sum.error <- sum(dfTest$error)
# for 10 mins
dfTest$ts10min <- add_ts(dfTest$timeStamp,pred.start,pred.end,10)
dfTest.10min <- data.frame(WIFIAPTag = dfTest$WIFIAPTag[1],
timeStamp = levels(dfTest$ts10min),
passengerCount = as.numeric(tapply(dfTest$passengerCount,
dfTest$ts10min,sum)),
pred = as.numeric(tapply(dfTest$pred,dfTest$ts10min,sum)))
dfTest.10min$error <- (dfTest.10min$passengerCount - dfTest.10min$pred)^2
sum.error.10min <- sum(dfTest.10min$error)
cat(sprintf('test_AFR::test_arima\t WIFIAPTag:%s\twid:%d\terror:%d\terror.10min:%d\n',
df$WIFIAPTag[1],df$wid[1],sum.error,sum.error.10min))
pred.start <- as.POSIXct('2016-09-13 15:00:00',tz = 'UTC')
pred.end <- as.POSIXct('2016-09-13 18:00:00',tz = 'UTC')
dfTrain <- subset(df,timeStamp < pred.start)
dfTest <- subset(df,timeStamp < pred.end & timeStamp >= pred.start)
fit <- auto.arima(dfTrain$passengerCount)
dfTest$pred <- forecast(fit,nrow(dfTest))$mean
dfTest$error <- (dfTest$passengerCount - dfTest$pred)^2
sum.error <- sum(dfTest$error)
# for 10 mins
dfTest$ts10min <- add_ts(dfTest$timeStamp,pred.start,pred.end,10)
dfTest.10min <- data.frame(WIFIAPTag = dfTest$WIFIAPTag[1],
timeStamp = levels(dfTest$ts10min),
passengerCount = as.numeric(tapply(dfTest$passengerCount,
dfTest$ts10min,sum)),
pred = as.numeric(tapply(dfTest$pred,dfTest$ts10min,sum)))
dfTest.10min$error <- (dfTest.10min$passengerCount - dfTest.10min$pred)^2
sum.error.10min <- sum(dfTest.10min$error)
cat(sprintf('test_AFR::test_arima\t WIFIAPTag:%s\twid:%f\terror:%f\terror.10min:%f\n',
df$WIFIAPTag[1],df$wid[1],sum.error,sum.error.10min))
?sprintf
cat(sprintf('test_AFR::test_arima\t WIFIAPTag:%s\twid:%f.0\terror:%f.2\terror.10min:%f.2\n',
df$WIFIAPTag[1],df$wid[1],sum.error,sum.error.10min))
cat(sprintf('test_AFR::test_arima\t WIFIAPTag:%s\twid:%f.0\terror:%f.2\terror.10min:%f.2\n',
)
)
?sprintf
cat(sprintf('test_AFR::test_arima\t WIFIAPTag:%s\twid:%f-.0\terror:%f-.2\terror.10min:%f-.2\n',
df$WIFIAPTag[1],df$wid[1],sum.error,sum.error.10min))
cat(sprintf('test_AFR::test_arima\t WIFIAPTag:%s\twid:%.0f\terror:%.0f\terror.10min:%.0f\n',
df$WIFIAPTag[1],df$wid[1],sum.error,sum.error.10min))
cat(sprintf('test_AFR::test_arima\t WIFIAPTag:%s\twid:%.0f\terror:%.2f\terror.10min:%.2f\n',
df$WIFIAPTag[1],df$wid[1],sum.error,sum.error.10min))
sum.error.10min
View(dfTest)
View(dfTest.10min)
mean(dfTest.10min$passengerCount)
View(dfTest)
df <- dfTest
tmp <- df[,c('timeStamp','passengerCount','pred')]
View(tmp)
melt.tmp <- melt(tmp,id.vars = 'timeStamp')
View(melt.tmp)
tmp1 <- df[,c('timeStamp','pred')]
names(tmp1) <- c('timeStamp','passengerCount')
tmp1$class <- 'pred'
tmp2 <- df[,c('timeStamp','passengerCount')]
names(tmp2) <- c('timeStamp','passengerCount')
tmp2$class <- 'real'
tmp <- c(tmp1,tmp2)
tmp <- rbind(tmp1,tmp2)
tmp <- rbind(tmp1,tmp2)
View(tmp1)
View(tmp2)
tmp1$passengerCount <- as.numeric(tmp1$passengerCount)
View(tmp1)
tmp <- rbind(tmp1,tmp2)
ggplot(tmp,aes(x = timeStamp,y = passengerCount,group = class)) + geom_line() + geom_point()
source('~/Code/R/TC_airport/dirFunc.R')
source('~/Code/R/TC_airport/dirFunc.R')
source('~/Code/R/TC_airport/dirFunc.R')
df <- split.dataAP[[1]]
plot_ap_data(df)
plot(forecast((fit,10)))
plot(forecast(fit,10))
par(mar = rep(2,4))
rep(0,4)
plot(forecast(fit,10))
plot(forecast(fit,180))
source('~/Code/R/TC_airport/dirFunc.R')
def_margin()
plot(fit,h = 180)
plot(forecast(fit,h = 180))
plot(forecast(fit,180))
?auto.arima
fit
fit <- auto.arima(dfTrain$passengerCount,trace = T)
?auto.arima
tsdata <- ts(dfTrain$passengerCount,frequency = 1440)
fit <- auto.arima(tsdata)
fit <- auto.arima(tsdata)
fit
tsdata <- ts(dfTrain$passengerCount,frequency = 60)
fit <- auto.arima(tsdata)
fit
dfTest$pred <- forecast(fit,nrow(dfTest))$mean
plot(forecast(fit,180))
fc <- forecast.Arima(fit,nrow(dfTest),level = c(99.5))
plot(fc)
dfTest$pred <- fc$mean
View(dfTest)
tsdata <- ts(dfTrain$passengerCount,frequency = 1440)
fit <- auto.arima(tsdata)
fc <- forecast.Arima(fit,nrow(dfTest),level = c(99.5))
plot(fc)
summary(data.ap$timeStamp)
tsdata <- ts(dfTrain$passengerCount,frequency = 2.875)
fit <- auto.arima(tsdata)
fc <- forecast.Arima(fit,nrow(dfTest),level = c(99.5))
plot(fc)
tsdata <- ts(dfTrain$passengerCount,frequency = 3)
fit <- auto.arima(tsdata)
fc <- forecast.Arima(fit,nrow(dfTest),level = c(99.5))
plot(fc)
dfTrain <- subset(df,timeStamp < as.POSIXct('2016-09-13',tz = 'UTC') &
timeStamp >= as.POSIXct('2016-09-11',tz = 'UTC'))
dfTest <- subset(df,timeStamp < as.POSIXct('2016-09-14',tz = 'UTC') &
timeStamp >= as.POSIXct('2016-09-13',tz = 'UTC'))
tsdata <- ts(dfTrain$passengerCount,frequency = 2)
fit <- auto.arima(tsdata)
fit
fc <- forecast.Arima(fit,nrow(dfTest),level = c(99.5))
plot(fc)
tsdata <- ts(dfTrain$passengerCount,frequency = 1440)
fit <- auto.arima(tsdata)
fc <- forecast.Arima(fit,nrow(dfTest),level = c(99.5))
plot(fc)
?ts
tsdata <- ts(dfTrain$passengerCount,frequency = 1440)
fit <- auto.arima(tsdata)
fc <- forecast.Arima(fit,nrow(dfTest),level = c(99.5))
plot(fc)
fc <- forecast.Arima(fit,h = nrow(dfTest),level = c(99.5))
plot(fc)
fc <- forecast.Arima(fit,h = 1,level = c(99.5))
plot(fc)
fc <- forecast.Arima(fit,h = 20,level = c(99.5))
plot(fc)
fc <- forecast.Arima(fit,h = nrow(dfTest))
plot(fc)
fc <- forecast.Arima(fit,h = nrow(dfTest),level = c(99.5))
plot(fc)
fc <- forecast.Arima(fit,h = nrow(dfTest))
plot(fc)
df <- split.dataAP[[10\]]
df <- split.dataAP[[10]]
dfTrain <- subset(df,timeStamp < as.POSIXct('2016-09-13',tz = 'UTC') &
timeStamp >= as.POSIXct('2016-09-11',tz = 'UTC'))
dfTest <- subset(df,timeStamp < as.POSIXct('2016-09-14',tz = 'UTC') &
timeStamp >= as.POSIXct('2016-09-13',tz = 'UTC'))
tsdata <- ts(dfTrain$passengerCount,frequency = 1440)
fit <- auto.arima(tsdata)
fc <- forecast.Arima(fit,h = nrow(dfTest))
plot(fc)
load(file.path(dir_data,'areaPC.Rda'))
View(area.pc.real)
length(unique(area.pc.real))
length(unique(area.pc.real$timeStamp))
split.areaPC <- split(area.pc.real,area.pc.real$class)
df <- split.areaPC[[1]]
dfTrain <- subset(df,timeStamp < as.POSIXct('2016-09-13',tz = 'UTC') &
timeStamp >= as.POSIXct('2016-09-11',tz = 'UTC'))
dfTest <- subset(df,timeStamp < as.POSIXct('2016-09-14',tz = 'UTC') &
timeStamp >= as.POSIXct('2016-09-13',tz = 'UTC'))
View(dfTest)
plot_ap_data(df)
dfTrain <- subset(df,timeStamp < as.POSIXct('2016-09-13',tz = 'UTC') &
timeStamp >= as.POSIXct('2016-09-11',tz = 'UTC'))
dfTest <- subset(df,timeStamp < as.POSIXct('2016-09-14',tz = 'UTC') &
timeStamp >= as.POSIXct('2016-09-13',tz = 'UTC'))
plot_ap_data(dfTrain)
plot_ap_data(dfTest)
tsdata <- ts(dfTrain$passengerCount,frequency = 144)
fit <- auto.arima(tsdata)
fc <- forecast.Arima(fit,h = nrow(dfTest))
plot(fc)
fit <- arima(tsdata,order = c(0,0,3))
fc <- forecast.Arima(fit,h = nrow(dfTest))
plot(fc)
fit <- arima(tsdata,order = c(1,1,3))
fc <- forecast.Arima(fit,h = nrow(dfTest))
plot(fc)
fit <- arima(tsdata,order = c(1,1,3))
fc <- forecast.Arima(fit,h = nrow(dfTest))
plot(fc)
fit <- arima(tsdata,order = c(1,1,5))
fc <- forecast.Arima(fit,h = nrow(dfTest))
plot(fc)
fit <- arima(tsdata,order = c(1,1,10))
fc <- forecast.Arima(fit,h = nrow(dfTest))
plot(fc)
?auto.arima
tsdata <- ts(dfTrain$passengerCount,frequency = 144)
fit <- auto.arima(tsdata,stationary = T)
fc <- forecast.Arima(fit,h = nrow(dfTest))
plot(fc)
fit <- auto.arima(tsdata,stationary = T,parallel = T)
fit <- auto.arima(tsdata,stationary = T)
fc <- forecast.Arima(fit,h = nrow(dfTest))
plot(fc)
dfTest$pred <- fc$mean
dfTest$error <- (dfTest$passengerCount - dfTest$pred)^2
sum.error <- sum(dfTest$error)
sum.error
tsdata <- ts(dfTrain$passengerCount,frequency = 144)
fit <- auto.arima(tsdata)
fc <- forecast.Arima(fit,h = nrow(dfTest))
plot(fc)
dfTest$pred <- fc$mean
dfTest$error <- (dfTest$passengerCount - dfTest$pred)^2
sum.error <- sum(dfTest$error)
sum.error
?forecast
?hotwind
View(BoxCox)
View(auto.arima)
ggAcf(tsdata)
gglagplot(tsdata)
ppPacf(tsdata)
ggPacf(tsdata)
?boxcox_trans
eeadj <- seasadj(stl(tsdata,s.window='periodic'))
eeadj <- seasadj(stl(dfTrain$passengerCount,s.window='periodic'))
dfTrain <- subset(df,timeStamp < as.POSIXct('2016-09-14',tz = 'UTC') &
timeStamp >= as.POSIXct('2016-09-11',tz = 'UTC'))
eeadj <- seasadj(stl(dfTrain$passengerCount,s.window='periodic'))
tsdata <- ts(dfTrain$passengerCount,frequency = 144)
eeadj <- seasadj(stl(dfTrain$passengerCount,s.window='periodic'))
?seasadj
?stl
?stl
eeadj <- seasadj(stl(dfTrain$passengerCount,s.window=144))
eeadj <- seasadj(stl(tsdata,s.window=144))
plot(eeadj)
dfTrain <- subset(df,timeStamp < as.POSIXct('2016-09-13',tz = 'UTC') &
timeStamp >= as.POSIXct('2016-09-11',tz = 'UTC'))
tsdata <- ts(dfTrain$passengerCount,frequency = 144)
eeadj <- seasadj(stl(tsdata,s.window=144))
plot(eeadj)
dfTrain <- subset(df,timeStamp < as.POSIXct('2016-09-14',tz = 'UTC') &
timeStamp >= as.POSIXct('2016-09-11',tz = 'UTC'))
tsdata <- ts(dfTrain$passengerCount,frequency = 144)
eeadj <- seasadj(stl(tsdata,s.window=144))
plot_ap_data(dfTrain)
eeadj <- seasadj(stl(tsdata,s.window=144))
plot(eeadj)
plot(dfTrain$passengerCount)
plot(eeadj)
plot(dfTrain$passengerCount)
plot(eeadj,dfTrain$passengerCount)
plot(eeadj)
tsdisplay(diff(eeadj),main="")
def_margin()
def_margin()
source('~/Code/R/TC_airport/dirFunc.R')
def_margin()
tsdisplay(diff(eeadj),main="")
source('~/Code/R/TC_airport/dirFunc.R')
def_margin()
tsdisplay(diff(eeadj),main="")
source('~/Code/R/TC_airport/dirFunc.R')
def_margin()
tsdisplay(diff(eeadj),main="")
def_margin()
tsdisplay(diff(eeadj),main="")
ggAcf(diff(eeadj))
ggAcf(diff(eeadj))
ggpAcf(diff(eeadj))
ggPAcf(diff(eeadj))
ggPacf(diff(eeadj))
tsdisplay(diff(eeadj),main="")
source('~/Code/R/TC_airport/dirFunc.R')
ggPacf(diff(eeadj))de
def_margin()
tsdisplay(diff(eeadj),main="")
source('~/Code/R/TC_airport/dirFunc.R')
eeadj <- seasadj(stl(tsdata,s.window=12))
tsdisplay(diff(eeadj),main="")
def_margin()
tsdisplay(diff(eeadj),main="")
ggPacf(diff(eeadj))
ggacf(diff(eeadj))
ggAcf(diff(eeadj))
ggAcf(diff(eeadj))
eeadj <- seasadj(stl(tsdata,s.window=144))
fit <- Arima(eeadj,order = c(144,1,1))
fit <- Arima(eeadj,order = c(144,1,0))
tsdisplay(diff(diff(eeadj)),main="")
def_margin()
tsdisplay(diff(diff(eeadj)),main="")
fit <- Arima(eeadj,order = c(144,1,0))
ggAcf(diff(diff(eeadj)))
def_margin()
ggAcf(diff(diff(eeadj)))
fit <- Arima(eeadj,order = c(144,1,1))
fit <- Arima(eeadj,order = c(144,1,2))
fit <- Arima(eeadj,order = c(144,1,5))
fit <- Arima(eeadj,order = c(12,1,5))
fit
?Arima
fit <- Arima(eeadj,order = c(12,1,1))
fit
fit <- Arima(eeadj,order = c(144,1,1))
summary(fit)
fit <- Arima(eeadj,order = c(12,1,1));summary(fit)
fit <- Arima(eeadj,order = c(4,1,1));summary(fit)
fit <- Arima(eeadj,order = c(24,1,1));summary(fit)
fit <- Arima(eeadj,order = c(48,1,1));summary(fit)
fit <- Arima(eeadj,order = c(24,1,1));summary(fit)
Acf(residuals(fit))
Box.test(residuals(fit),lag = 24,fitdf=4,type = "Ljung")
plot(forecast(fit))
def_margin()
plot(forecast(fit))
setwd('~/Data/dataLoadforDiskAnalysis/')
load(file.path(dir_data,'flist.Rda'))
rm(list = ls())
source('head.R')
load('flist.Rda')
write.table(data.flist,file = 'flistXZ',\row.names = F)
write.table(data.flist,file = 'flistXZ',row.names = F)
write.table(data.flist,file = 'flistXZ',row.names = F,quote = "")
write.table(data.flist,file = 'flistXZ',row.names = F,quote = F)
table(data.flist$class)
a <- melt(table(data.flist$ftype))
View(a)
a <- melt(table(data.flist$ftype,data.flist$class))
View(a)
a <- subset(a,value != 0)
View(a)
a <- a[order(a$value,decreasing = T),]
View(a)
setwd('~/Code/R/dataLoadforDiskAnalysis/')
rm(list = ls())
source('head.R')
load(file.path(dir_data,'load_ftr_attrid.Rda'))
View(data.flist)
rm(list = ls())
source('head.R')
library(ggplot2)
#@@@ CONFIGURE @@@#
load(file.path(dir_dataSource,'load_ftr_attrid.Rda'))
