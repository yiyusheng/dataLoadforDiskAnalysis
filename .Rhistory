theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,hjust = 0.2),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,hjust = -0.2),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,hjust = 1),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,margin = margin(c(0,10,0,0))),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,margin = unit(c(0,10,0,0))),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,margin = unit(c(0,2,0,0),'cm')),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,margin = margin(10,20,30,40)),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,hjust = -0.1),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,hjust = -0.9),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,hjust = 0.1),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,hjust = 2),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,hjust = 1),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,hjust = 0.5),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
# Test
rm(list = ls())
#@@@ CONFIGURE @@@#
source(file.path('D:/Git/SMART','SMARTConfig.R'))
#@@@ Function @@@#
source('D:/Git/R_Function/Rfun.R')
source(file.path(dir_code,'SMARTFunc.R'))
load(file.path(dir_data,'diskInfo.Rda'))
head(diskInfo)
a <- subset(diskInfo,!is.na(svrid))
summary(diskInfo)
source('D:/Git/SMART/diskInfo.R')
source('D:/Git/SMART/diskInfo.R')
summary(diskInfo)
a <- subset(diskInfo,is.na(svrid))
a <- factorX(a)
summary(a)
diskInfoValid <- subset(diskInfo,!is.na(svrid))
save(diskInfoValid,file = file.path(dir_data,'diskInfoValid.Rda'))
summary(diskInfoValid)
rm(list = ls())
#@@@ CONFIGURE @@@#
source(file.path('D:/Git/attrid','attr_config.R'))
#@@@ Function @@@#
source('D:/Git/R_Function/Rfun.R')
source(file.path(dir_code,'attr_function.R'))
source(file.path(dir_code,'AFR_io_function.R'))
#@@@ LOAD DATA @@@#
load(file.path(dir_data,'load_ftr_attrid.Rda'))
source('C:/Users/yiyusheng/Desktop/rename.R')
source('C:/Users/yiyusheng/Desktop/rename.R')
sourceDirName <- list.files(sourceDir)
source('C:/Users/yiyusheng/Desktop/rename.R')
itemName <- unlist(itemName)
itemSplit <- strsplit(itemName,'_')
itemSplit <- data.frame(matrix(unilst(strsplit(itemName,'_')),nrow = itemName,byrow = T))
itemSplit <- data.frame(matrix(unlist(strsplit(itemName,'_')),nrow = itemName,byrow = T))
itemName <- unlist(itemName)
itemSplit <- data.frame(unlist(strsplit(itemName,'_')))
itemSplit <- data.frame(strsplit(itemName,'_'))
View(itemSplit)
itemSplit <- data.frame(t(strsplit(itemName,'_')))
a <- unlist(strsplit(itemName,'_'))
a <- matrix(unlist(strsplit(itemName,'_')))
a <- matrix(unlist(strsplit(itemName,'_')),nrow = 70)
View(a)
a <- matrix(unlist(strsplit(itemName,'_')),nrow = 70,byrow = T)
View(a)
itemSplit <- data.frame(matrix(unlist(strsplit(itemName,'_')),nrow = 70,byrow = T))
View(itemSplit)
names(itemSplit) <- c('id','name')
itemSplit$name <- gsub('\..*','',itemSplit$name)
itemSplit$name <- gsub('\\..*','',itemSplit$name)
View(itemSplit)
itemSplit$exchgname <- gsub('\\.*','\\.mp3',itemName)
itemSplit$exchgname <- gsub('\\..*','\\.mp3',itemName)
itemSplit <- data.frame(matrix(unlist(strsplit(itemName,'_')),nrow = 70,byrow = T))
names(itemSplit) <- c('id','name')
itemSplit$name <- paste(gsub('\\..*','',itemSplit$name),'.mp3',sep = '')
itemSplit$exchgname <- gsub('\\..*','\\.mp3',itemName)
a <- itemSplit[order(itemSplit$name),]
View(a)
r <- file.rename(file.path(targeDir,itemSplit$name,itemSplit$exchgname))
targetDir <- 'D:/Download/CD音质音频文件 320K/All'
r <- file.rename(file.path(targeDir,itemSplit$name,itemSplit$exchgname))
r <- file.rename(file.path(targetDir,itemSplit$name,itemSplit$exchgname))
r <- file.rename(file.path(targetDir,itemSplit$name),file.path(targetDir,itemSplit$exchgname))
withIDName <- file.path(sourceDir,'All')
withIDName <- list.file(file.path(sourceDir,'All'))
withIDName <- file.list(file.path(sourceDir,'All'))
withIDName <- list.files(file.path(sourceDir,'All'))
withIDName <- list.files(file.path(sourceDir,'All','withID'))
withIDName <- data.frame(matrix(unlist(strsplit(withIDName,'_')),nrow = length(withIDName),byrow = T))
View(withIDName)
names(withIDName) <- c('id','name')
withIDName$id <- gsub('p','',withIDName$id)
withIDName <- list.files(file.path(sourceDir,'All','withID'))
withIDName <- data.frame(matrix(unlist(strsplit(withIDName,'_')),nrow = length(withIDName),byrow = T))
names(withIDName) <- c('id','name')
withIDName$id <- as.numeric(gsub('p','',withIDName$id))
withIDName <- list.files(file.path(sourceDir,'All','withID'))
withIDName <- data.frame(matrix(unlist(strsplit(withIDName,'_')),nrow = length(withIDName),byrow = T))
withIDName <- list.files(file.path(sourceDir,'All','withID'))
withIDName <- data.frame(matrix(unlist(strsplit(withIDName,'_')),nrow = length(withIDName),byrow = T))
View(withIDName)
names(withIDName) <- c('id','name')
withIDName$id <- as.numeric(gsub('p','',withIDName$id))
View(withIDName)
rm(list = ls())
source('head.R')
# read data and save
# data <- rbind(read.csv(file.path(dir_data,'2009.csv')),
#               read.csv(file.path(dir_data,'2010.csv')),
#               read.csv(file.path(dir_data,'2011.csv')),
#               read.csv(file.path(dir_data,'2012.csv')),
#               read.csv(file.path(dir_data,'2013.csv')))
# save(data,file = file.path(dir_data,'helper[09-13].Rda'))
load(file.path(dir_data,'helper[09-13].Rda'))
getwd()
setwd('D:\Git\dataLoadforDiskAnalysis')
setwd('D:/Git/dataLoadforDiskAnalysis')
rm(list = ls())
source('head.R')
# read data and save
# data <- rbind(read.csv(file.path(dir_data,'2009.csv')),
#               read.csv(file.path(dir_data,'2010.csv')),
#               read.csv(file.path(dir_data,'2011.csv')),
#               read.csv(file.path(dir_data,'2012.csv')),
#               read.csv(file.path(dir_data,'2013.csv')))
# save(data,file = file.path(dir_data,'helper[09-13].Rda'))
load(file.path(dir_data,'helper[09-13].Rda'))
col_need <- c('创建时间','故障原因','当前状态','故障发生部门','部门','服务恢复时间','结单时间',
'解决方法','固资编号','故障机固资号','主机IP','告警级别','设备型号','设备类型',
'SN','上架时间','服务恢复耗时.小时.','事件类型','硬盘故障类型','硬盘故障数量',
'硬盘容量','硬盘生产厂商','硬盘品牌厂商','备机固资号')
data <- data[,col_need]
names(data) <- c('f_time','reason','state','fail_dept','dept','recover_time','close_time',
'solution','svr_id','svr_id_failure','ip','level','model_name','dev_class_id',
'SN','use_time','recover_interval','type','disk_failure_type','disk_failure_count',
'disk_capacity','disk_vendor','disk_band_vendor','svr_id_backup')
View(data)
table(data$state)
levels(data$state)
str(data$state)
data <- subset(data,as.numeric(state) != 1 & as.numeric(state) != 4)
data.filter <- data[with(data,order(ip,f_time)),]
#replace wrong string
data.filter$ip <- gsub("无", "", data.filter$ip)
data.filter$ip <- gsub("\n", "", data.filter$ip)
data.filter <- data.filter[data.filter$ip!='',]
# 2.3 remove item with more than one ip
idx.ip_res <- nchar(as.character(data.filter$ip)) <= 15
data.filter <- data.filter[idx.ip_res,]
# 2.4 remove item with ip blocked by regexp
regexp.ip <- "^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$"
idx.ip_reg <- grepl(regexp.ip,data.filter$ip)
data.filter <- data.filter[idx.ip_reg,]
data.filter <- factorX(data.filter)
data.filter$use_time <- gsub("无", "", data.filter$use_time)
data.filter$use_time <- gsub("\n", "", data.filter$use_time)
data.filter$use_time <- as.POSIXct(data.filter$use_time,tz = 'UTC')
data.filter$f_time <- as.POSIXct(data.filter$f_time,tz = 'UTC')
table(data.filter$disk_failure_type)
source('D:/Git/dataLoadforDiskAnalysis/Failure_list_preprocess(helper).R')
save(data.flist,data.bad,file = file.path(dir_data,'flist(helper[2008-2013]).Rda'))
